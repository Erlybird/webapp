name: Packer_Build

on:
  push:
    branches:
      - main

jobs:

  jar_creation:
    env:
      URL: jdbc:mysql://localhost:3306/cloud?createDatabaseIfNotExist=true
      USER: root
      PASS: Ssangramm@12

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DB_NAME }}
        ports:
          - 3306:3306
        options:
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Wait for MySQL to be ready
        run: |
          until nc -z -v -w30 localhost 3306
          do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done

      - name: Checking out the code
        uses: actions/checkout@v2

      - name: Build with Maven
        run:  mvn clean && mvn package

      - name: Check jar file created or not
        run: cd ${{ github.workspace }}/target/ && ls -al

#      - name: Setup `packer`
#        uses: hashicorp-contrib/setup-packer@v2
#        with:
#          version: 1.6.5

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_GIT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_GIT }}
          aws-region: ${{ vars.AWS_REGION}}

#
#      - name: Packer-build
#        run: packer build ./aws-debian.pkr.hcl
      - name: Run Packer init
        id: init
        run: packer init ./aws-debian.pkr.hcl

      - name: Build AMI
        run: packer build -var "jar_file= /home/runner/work/webapp/webapp/target/webapp-0.0.1-SNAPSHOT.jar" ./aws-debian.pkr.hcl
#          cp ./target/*.jar packer






